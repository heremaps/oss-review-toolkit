dist: bionic

sudo: required

language: java

before_cache:
  - ./gradlew --stop
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/dists/
    - $HOME/.ivy2/
    - $HOME/.m2/repository/
    - $HOME/.ort/cache/

env:
  global:
    - ANDROID_HOME="/opt/android"
    - ANDROID_SDK_VERSION="6200805"
    - BOWER_VERSION="1.8.8"
    - CONAN_VERSION="1.18.0"
    - FLUTTER_HOME="/opt/flutter"
    - FLUTTER_VERSION="v1.12.13+hotfix.9-stable"
    - GIMME_GO_VERSION="1.13" # Used internally by Travis.
    - GO_DEP_VERSION="0.5.4"
    - NPM_VERSION="6.14.1"
    - PHP_VERSION="7.2"
    - PYTHON_PIPENV_VERSION="2018.11.26"
    - RUST_VERSION="1.35.0"
    - STACK_VERSION="2.1.3"
    - YARN_VERSION="1.21.1"

addons:
  apt:
    # Flutter depends on /usr/lib/x86_64-linux-gnu/libstdc++.so.6 version GLIBCXX_3.4.18
    sources:
      - ubuntu-toolchain-r-test # if we don't specify this, the libstdc++6 we get is the wrong version
    packages:
      - cvs
      - lib32stdc++6

before_install:
  - sudo rm -f $JAVA_HOME/lib/security/cacerts
  - sudo ln -s /etc/ssl/certs/java/cacerts $JAVA_HOME/lib/security/cacerts

install:
  - eval "$(gimme)"
  - curl https://raw.githubusercontent.com/golang/dep/v$GO_DEP_VERSION/install.sh | sh
  - npm install -g bower@$BOWER_VERSION npm@$NPM_VERSION yarn@$YARN_VERSION
  - phpenv global $PHP_VERSION
  - curl -Ls https://git.io/sbt > ~/bin/sbt
  - chmod a+x ~/bin/sbt
  - curl -sSL https://github.com/commercialhaskell/stack/raw/v$STACK_VERSION/etc/scripts/get-stack.sh | sh
  - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain $RUST_VERSION
  - export PATH=$PATH:$HOME/.cargo/bin
  - curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
  - chmod a+x ~/bin/repo
  - curl -Os https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_VERSION}_latest.zip
  - unzip -q commandlinetools-linux-${ANDROID_SDK_VERSION}_latest.zip -d $ANDROID_HOME
  - rm commandlinetools-linux-${ANDROID_SDK_VERSION}_latest.zip
  - yes | $ANDROID_HOME/tools/bin/sdkmanager --sdk_root=$ANDROID_HOME "platform-tools"
  - curl -Os https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_$FLUTTER_VERSION.tar.xz
  - tar xf flutter_linux_$FLUTTER_VERSION.tar.xz -C $(dirname $FLUTTER_HOME)
  - rm flutter_linux_$FLUTTER_VERSION.tar.xz
  - export PATH="$PATH:$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin"
  - flutter config --no-analytics
  - flutter doctor
  - pip install --user conan==$CONAN_VERSION pipenv==$PYTHON_PIPENV_VERSION
  - conan user # Create the conan data directory. Automatic detection of your arch, compiler, etc.
  - pyenv global system 3.6
  - pip3 install --user reuse

before_script:
  - reuse lint
  - sed -i -r 's,(^distributionUrl=)(.+)-all\.zip$,\1\2-bin.zip,' gradle/wrapper/gradle-wrapper.properties

script:
  - set -o pipefail
  - ./gradlew --stacktrace detekt
  - if [ "$TRAVIS_EVENT_TYPE" = "cron" ]; then
      ./gradlew --stacktrace -Dkotest.assertions.multi-line-diff=simple -Dkotest.tags.exclude=ScanCodeTag test funTest jacocoReport | tee log.txt;
    else
      ./gradlew --scan --stacktrace -Dkotest.assertions.multi-line-diff=simple -Dkotest.tags.exclude=ExpensiveTag test funTest jacocoReport | tee log.txt;
    fi
  - if grep -A1 ".+Test.+STARTED$" log.txt | grep -q "^:"; then
      echo "Some tests seemingly have been aborted.";
      exit 1;
    fi

after_success:
  - if [ "$TRAVIS_EVENT_TYPE" = "cron" ]; then
      bash <(curl -s https://codecov.io/bash) -X gcov -f '!*/src/*/assets/*';
    fi

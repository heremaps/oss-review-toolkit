jobs:
- job: 'WindowsTest'
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: UsePythonVersion@0
    displayName: Enable Python 3.6
    inputs:
      versionSpec: '3.6'
      addToPath: true
      architecture: 'x64'

  # Install required tools.
  - pwsh: |
      ## Install git-repo.
      Invoke-WebRequest -Uri "https://storage.googleapis.com/git-repo-downloads/repo" -OutFile "$env:PROGRAMFILES\Git\usr\bin\repo"
    displayName: Install Required Tools
    errorActionPreference: continue
    failOnStderr: false

  # Clone repository.
  - checkout: self
    fetchDepth: 1
    submodules: recursive

  # Gradle build cache, see: https://docs.microsoft.com/en-us/azure/devops/pipelines/release/caching?view=azure-devops
  - task: Cache@2
    inputs:
      key: '"$(Agent.OS)" | test | gradle-caches | gradle.properties, settings.gradle, **/build.gradle.kts'
      restoreKeys: |
        "$(Agent.OS)" | test | gradle-caches
      path: $(GRADLE_USER_HOME)/caches
    displayName: Cache Gradle Caches

  - task: Cache@2
    inputs:
      key: '"$(Agent.OS)" | gradle-wrapper | gradle/wrapper/gradle-wrapper.properties'
      restoreKeys: |
        "$(Agent.OS)" | gradle-wrapper
      path: $(GRADLE_USER_HOME)/wrapper/dists
    displayName: Cache Gradle Wrapper

  # Check requirements.
  # Enable this task to check installed requirements, e.g. after upgrading the required version of a system
  # dependency.
  - task: Gradle@2
    displayName: Check Requirements
    continueOnError: true
    enabled: false # TODO: Make this a Pipeline parameter to be able to activate it in the UI.
    inputs:
      gradleWrapperFile: gradlew.bat
      options: --console=plain --no-daemon -x reporter-web-app:yarnBuild
      tasks: 'cli:run --args="requirements"'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      gradleOptions: '-Xmx4096m'

  # Build and test.
  - task: Gradle@2
    displayName: Run Tests
    inputs:
      gradleWrapperFile: gradlew.bat
      # TODO: Only exclude ExpensiveTag on PR builds.
      options: --console=plain --no-daemon --stacktrace -Dkotest.tags.exclude=ExpensiveTag -Dkotest.assertions.multi-line-diff=simple -x analyzer:test -x analyzer:funTest
      tasks: 'test funTest'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      testRunTitle: $(Agent.JobName)
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      gradleOptions: '-Xmx8192m'

  # Ensure that any running Gradle daemon is stopped before caching starts.
  - bash: ./gradlew --stop
    displayName: Stop Gradle Daemon

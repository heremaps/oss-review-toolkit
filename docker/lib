# Copyright (C) 2019 Bosch Software Innovations GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

buildWithoutContext () {
    DOCKER_FILE=$1
    DOCKER_IMAGE=$2

    [ -n "$http_proxy" ] && HTTP_PROXY_ARG="--build-arg http_proxy=$http_proxy"
    [ -n "$https_proxy" ] && HTTPS_PROXY_ARG="--build-arg https_proxy=$https_proxy"

    # Build the image without a context to avoid it being sent to the daemon every time.
    docker build $HTTP_PROXY_ARG $HTTPS_PROXY_ARG -t $DOCKER_IMAGE - < $DOCKER_FILE
}

runAsUser () {
    DOCKER_ARGS=$1
    DOCKER_IMAGE=$2
    COMMAND=$3

    DOCKER_RUN_AS_USER="-v /etc/group:/etc/group:ro -v /etc/passwd:/etc/passwd:ro -v $HOME:$HOME -u $(id -u $USER):$(id -g $USER)"

    [ -n "$http_proxy" ] && HTTP_PROXY_ENV="-e http_proxy"
    [ -n "$https_proxy" ] && HTTPS_PROXY_ENV="-e https_proxy"

    # Mount the project root into the image to run the command task from there.
    docker run $DOCKER_ARGS $DOCKER_RUN_AS_USER $HTTP_PROXY_ENV $HTTPS_PROXY_ENV -v /tmp:/tmp -v $PWD:/home/ort -w /home/ort $DOCKER_IMAGE $COMMAND
}

parseProxyToProps () {
    PROXY=$1
    PROTOCOL=$2

    HOST=${PROXY%:*}
    HOST=${HOST#*//}

    PORT=${PROXY##*:}
    [ "$PORT" -ge 0 ] 2>/dev/null || PORT=80

    # TODO: Support proxy authentication once Gradle does, see https://github.com/gradle/gradle/issues/5052.
    echo "-D$PROTOCOL.proxyHost=$HOST -D$PROTOCOL.proxyPort=$PORT"
}

runGradleWrapper () {
    DOCKER_IMAGE=$1
    shift
    GRADLE_ARGS=$@

    [ -n "$http_proxy" ] && HTTP_PROXY_PROPERTIES=$(parseProxyToProps $http_proxy "http")
    [ -n "$https_proxy" ] && HTTPS_PROXY_PROPERTIES=$(parseProxyToProps $https_proxy "https")

    # Stop any running daemon to avoid it locking the cache on the host, see https://github.com/gradle/gradle/issues/851.
    ./gradlew $HTTP_PROXY_PROPERTIES $HTTPS_PROXY_PROPERTIES --stop && \
        runAsUser "--rm" $DOCKER_IMAGE "./gradlew $HTTP_PROXY_PROPERTIES $HTTPS_PROXY_PROPERTIES --no-daemon --stacktrace $GRADLE_ARGS"
}

die () {
    echo "$@" 1>&2
    exit 1
}

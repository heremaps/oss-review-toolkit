skip_branch_with_pr: true

environment:
  HOME: $(HOMEDRIVE)$(HOMEPATH)
  BOWER_VERSION: 1.8.8
  COMPOSER_VERSION: 5.1.0
  CONAN_VERSION: 1.18.0
  FLUTTER_HOME: C:\flutter
  FLUTTER_VERSION: v1.12.13+hotfix.9-stable
  GO_DEP_VERSION: 0.5.0
  NPM_VERSION: 6.14.1
  PHP_VERSION: 7.4.3
  PYTHON_PIPENV_VERSION: 2018.11.26
  RUST_VERSION: 1.35.0
  SBT_VERSION: 1.0.2
  STACK_VERSION: 2.1.3.20190715
  VIRTUAL_ENV_VERSION: 15.1.0
  YARN_VERSION: 1.21.1

cache:
  - $(HOME)\.gradle\caches
  - $(HOME)\.gradle\wrapper\dists -> gradle\wrapper\gradle-wrapper.properties
  - $(HOME)\.ivy2
  - $(HOME)\.m2\repository
  - $(HOME)\.ort\cache

clone_depth: 50

install:
  - git submodule update --init --recursive
  - npm install -g npm@%NPM_VERSION%
  - npm install -g bower@%BOWER_VERSION% yarn@%YARN_VERSION%
  - pip install virtualenv==%VIRTUAL_ENV_VERSION%
  - pip install conan==%CONAN_VERSION%
  - conan user # Create the conan data directory. Automatic detection of your arch, compiler, etc.
  - cinst haskell-stack --version %STACK_VERSION% -y
  - cinst rust --version %RUST_VERSION% -y
  - cinst sbt --version %SBT_VERSION% -y
  - cinst php --version %PHP_VERSION% -y
  - cinst composer --version %COMPOSER_VERSION% -y # The version refers to the installer, not to Composer.
  - cinst dep --version %GO_DEP_VERSION% -y
  - refreshenv
  - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -Sy cvs"
  - set "PATH=%PATH%;C:\msys64\usr\bin" # For CVS.
  - set "PATH=C:\Ruby25\bin;%PATH%" # For licensee.
  # Install git-repo.
  - ps: Start-FileDownload 'https://storage.googleapis.com/git-repo-downloads/repo' -FileName "$env:PROGRAMFILES\Git\usr\bin\repo"
  # Install Flutter.
  - ps: Start-FileDownload "https://storage.googleapis.com/flutter_infra/releases/stable/windows/flutter_windows_$env:FLUTTER_VERSION.zip"
  - 7z x flutter_windows_%FLUTTER_VERSION%.zip -oC:\ > nul
  - set "PATH=%FLUTTER_HOME%\bin;%FLUTTER_HOME%\bin\cache\dart-sdk\bin;%PATH%"
  - flutter config --no-analytics
  - flutter doctor
  - pip install pipenv==%PYTHON_PIPENV_VERSION%
  # Work around an issue with GPG failing to connect to its agent in GitRepoTest
  # as seen at https://ci.appveyor.com/project/heremaps/oss-review-toolkit/builds/30228453#L3030.
  - mv C:\msys64\usr\bin\gpg.exe C:\msys64\usr\bin\gpg.exe.orig
  - mv "C:\Program Files\Git\usr\bin\gpg.exe" "C:\Program Files\Git\usr\bin\gpg.exe.orig"

# Do something useful here to override the default MSBuild (which would fail otherwise).
build_script:
  - if not exist "%HOME%\.gradle" mkdir "%HOME%\.gradle"
  - echo org.gradle.java.home=C:/Program Files/Java/jdk11>>"%HOME%\.gradle\gradle.properties"
  - ps: |
      $file = 'gradle\wrapper\gradle-wrapper.properties'
      get-content $file | %{ $_ -replace '(^distributionUrl=)(.+)-all\.zip$', '$1$2-bin.zip' } | set-content "${file}.new"
      mv -force "${file}.new" $file
  - gradlew --stacktrace detekt

test_script:
  - if "%APPVEYOR_SCHEDULED_BUILD%"=="True" (
      gradlew --stacktrace -Dkotest.assertions.multi-line-diff=simple dokkaJar test funTest
    ) else (
      gradlew --stacktrace -Dkotest.assertions.multi-line-diff=simple -Dkotest.tags.exclude=ExpensiveTag test funTest
    )

after_test:
  - gradlew --stop

on_finish:
  - ps: |
      $url = "https://ci.appveyor.com/api/testresults/junit/$env:APPVEYOR_JOB_ID"
      $pattern = '**\build\test-results\**\TEST-*.xml'
      foreach ($file in (Resolve-Path $pattern)) {
        (New-Object 'System.Net.WebClient').UploadFile($url, $file)
      }

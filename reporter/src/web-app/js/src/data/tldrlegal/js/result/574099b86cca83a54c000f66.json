{
  "id": "574099b86cca83a54c000f66",
  "title": "test",
  "manager": {
    "id": "574065a36cca83a54c000f4e",
    "username": "zanyar"
  },
  "slug": "test",
  "source": "https://tldrlegal.com/api/license/574099b86cca83a54c000f66",
  "description": "",
  "summary": {
    "must": [],
    "cannot": [],
    "can": []
  },
  "fulltext": "<p>&lt;?php<br>/**<br>* AdminsController<br>*<br>* PUBLIC:  PRIVATE<br>* -----------  ------------------<br>* __construct   <br>* indexAction<br>* editAction<br>* updateAction<br>* addAction<br>* deleteAction<br>*/<br>class AdminsController extends CController<br>{<br>   public function __construct()<br>   {<br>  parent::__construct();<br>   <br>  // block access to this controller for not-logged users<br>     CAuth::handleLogin();   <br><br>  $this-&gt;_loggedId = CAuth::getLoggedId();<br>   <br>  $settings = Settings::model()-&gt;findByPk(1);<br>  $this-&gt;_view-&gt;setMetaTags('title', 'Account | '.$settings-&gt;metatag_title);<br>  $this-&gt;_view-&gt;setMetaTags('keywords', $settings-&gt;metatag_keywords);<br>  $this-&gt;_view-&gt;setMetaTags('description', $settings-&gt;metatag_description);<br>  $this-&gt;_view-&gt;cmsName = $settings-&gt;site_name;<br>  $this-&gt;_view-&gt;cmsSlogan = $settings-&gt;slogan;<br>  $this-&gt;_view-&gt;cmsFooter = $settings-&gt;footer;<br><br>     $this-&gt;_view-&gt;activeLink = 'home';<br>     $this-&gt;_view-&gt;viewRightMenu = false;<br>     $this-&gt;_view-&gt;errorField = '';<br>     $this-&gt;_view-&gt;actionMessage = '';<br><br>  // prepare list of roles that the logged admin can deal with<br>  $allRolesList = array(); <br>  $rolesList = array();<br>     <br>  if(CAuth::isLoggedInAs('admin')){<br>     $rolesList = array('admin'=&gt;'admin','user'=&gt;'user','staff'=&gt;'staff');<br>  }         <br>  $roles = array(<br>       array('code'=&gt;'user', 'name'=&gt;'User'),<br>       array('code'=&gt;'staff', 'name'=&gt;'Staff'),<br>       array('code'=&gt;'admin', 'name'=&gt;'Admin')<br>     );<br>     if(is_array($roles)){<br>     foreach($roles as $role){<br>       $allRolesList[$role['code']] = $role['name'];<br>       if(in_array($role['code'], $rolesList)){<br>         $rolesList[$role['code']] = $role['name'];<br>       }<br>    }<br>     }<br>  $this-&gt;_view-&gt;rolesListStr = \"'\".implode(\"','\", array_keys($rolesList)).\"'\";<br>  $this-&gt;_view-&gt;rolesList = $rolesList;<br>  $this-&gt;_view-&gt;allRolesList = $allRolesList;<br>     <br>     $this-&gt;_view-&gt;dateTimeFormat = 'm F, Y H:i:s';<br>   }<br><br>     public function indexAction()<br>     {<br>     $this-&gt;redirect('admins/view');<br>     }<br>   <br>  /**<br>  * View admins action handler<br>  * @param string $msg <br>  */<br>  public function viewAction($msg = '')<br>  {<br>     $this-&gt;_view-&gt;activeLink = 'admins';<br>  switch($msg){<br>     case 'added': <br>         $message = A::t('core', 'The adding operation has been successfully completed!');<br>         break;             <br>     case 'updated': <br>         $message = A::t('core', 'The updating operation has been successfully completed!');<br>         break;             <br>       default:<br>         $message = '';             <br>  }<br>  if(!empty($message)){<br>       $this-&gt;_view-&gt;actionMessage = CWidget::create('CMessage', array('success', $message, array('button'=&gt;true)));<br>     }<br>  $this-&gt;_view-&gt;render('admins/view');<br>  }<br><br>  /**<br>  * Edit admin action handler<br>  * @param int $id The admin id <br>  */<br>  public function editAction($id = 0)<br>  {<br>     $this-&gt;_view-&gt;activeLink = 'admins';<br>     <br>     //$this-&gt;_view-&gt;activeLink = 'admins';<br>     $admin = Admins::model()-&gt;findByPk((int)$id);<br>     if(!$admin){<br>         $this-&gt;redirect('adminpanel/index');<br>     }<br>     $this-&gt;_view-&gt;isMyAccount = ($admin-&gt;id == $this-&gt;_loggedId ? true : false);<br>     if($this-&gt;_view-&gt;isMyAccount == true) $this-&gt;_view-&gt;activeLink = 'myAccount';<br><br>     // allow access to edit other admins only to site owner or main admin<br>  if(!$this-&gt;_view-&gt;isMyAccount && <br>       !CAuth::isLoggedInAs('admin') &&<br>       !in_array($admin-&gt;role, array_keys($this-&gt;_view-&gt;rolesList))){<br>     $this-&gt;redirect('adminpanel/index');<br>  }<br>  $this-&gt;_view-&gt;admin = $admin;<br>     $this-&gt;_view-&gt;password = '';<br>     $this-&gt;_view-&gt;passwordRetype = '';<br>   <br>  $this-&gt;_view-&gt;render('admins/edit');<br>  }<br><br><br>  /**<br>  * My Account action handler<br>  * Calls the editAction with id of logged admin.<br>  */<br>   public function myAccountAction()<br>   {<br>     $this-&gt;_view-&gt;activeLink = 'myAccount';<br>     $this-&gt;editAction($this-&gt;_loggedId);     <br>  }<br> <br>  /*<br>  * Add new admin action handler<br>  */<br>  public function addAction()<br>  {<br>  // allow access only to site owner or main admin<br>  // if(!CAuth::isLoggedInAs('admin')){<br>  //    $this-&gt;redirect('backend/index');<br>  // }<br>  $this-&gt;_view-&gt;render('admins/add');<br>  }<br><br>  /**<br>  * Delete admin action handler<br>  * @param int $id The admin id <br>  */<br>  public function deleteAction($id = 0)<br>  {<br>  // allow access only to site owner or main admin<br>  // if(!CAuth::isLoggedInAs('owner', 'mainadmin')){<br>  //    $this-&gt;redirect('backend/index');<br>  // }<br>           <br>     $msg = '';<br>     $msgType = '';<br>   <br>     $admin = Admins::model()-&gt;findByPk((int)$id);<br>     if(!$admin){<br>       $this-&gt;redirect('admins/view');<br>     }<br>     <br>     // check if this delete operation is allowed<br>     if(!in_array($admin-&gt;role, array_keys($this-&gt;_view-&gt;rolesList))){<br>       $msg = A::t('core', 'Operation Blocked Error Message');<br>       $msgType = 'error';<br>     // delete the admin<br>     }else if($admin-&gt;delete()){<br>     $msg = A::t('core', 'Deleting operation has been successfully completed!');<br>       $msgType = 'success';<br>     }else{<br>       if(APPHP_MODE == 'demo'){<br>         $msg = CDatabase::init()-&gt;getErrorMessage();<br>         }else{<br>         $msg = A::t('core', 'An error occurred while deleting the record!');   <br>         }<br>       $msgType = 'error';<br>     }<br>     if(!empty($msg)){<br>       $this-&gt;_view-&gt;actionMessage = CWidget::create('CMessage', array($msgType, $msg, array('button'=&gt;true)));<br>     }<br>     $this-&gt;_view-&gt;render('admins/view');<br>  }<br>   <br>}</p>"
}
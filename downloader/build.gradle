// Apply core plugins.
apply plugin: 'application'

applicationName = 'downloader'
mainClassName = 'com.here.ort.downloader.Main'

sourceSets {
    funTest {
        kotlin.srcDirs 'src/funTest/kotlin'
    }
    intTest {
        kotlin.srcDirs 'src/intTest/kotlin'
    }
}



dependencies {
    compile project(':model')
    compile project(':util')

    compile "com.beust:jcommander:$jcommanderVersion"

    funTestCompile sourceSets.main.output
    funTestCompile sourceSets.test.output
    funTestCompile configurations.testCompile
    funTestRuntime configurations.testRuntime
    funTestCompile "io.kotlintest:kotlintest:$kotlintestVersion"

    intTestCompile sourceSets.main.output
    intTestCompile sourceSets.test.output
    intTestCompile configurations.testCompile
    intTestRuntime configurations.testRuntime
    intTestCompile "io.kotlintest:kotlintest:$kotlintestVersion"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

}

task funTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'Verification'
    classpath = sourceSets.funTest.runtimeClasspath
    testClassesDirs = sourceSets.funTest.output.classesDirs

    testLogging {
        events 'started', 'passed', 'skipped', 'failed'
        exceptionFormat 'full'
    }
}

task intTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'Verification'
    classpath = sourceSets.intTest.runtimeClasspath
    testClassesDirs = sourceSets.intTest.output.classesDirs

    testLogging {
        events 'started', 'passed', 'skipped', 'failed'
        exceptionFormat 'full'
    }
}

check.dependsOn funTest
